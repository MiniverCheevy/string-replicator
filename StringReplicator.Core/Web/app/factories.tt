<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="$(ProjectDir)\CodeGeneration\CodeWalker.ttinclude" #>
<#


foreach (var resource in walker.Resources)
{
var name = firstLetterLower(resource.Name);	
	manager.StartNewFile(name + "Factory.js"); 

var bodyVerbs = new string[]{"post","put"};
#>
//***************************************************************
//This code just called you a tool
//What I meant to say is that this code was generated by a tool
//so don't mess with it unless you're debugging
//subject to change without notice, might regenerate while you're reading, etc
//***************************************************************

(function () {
    angular
	.module('app')
	.factory('<#=name #>Factory', ['$http','$log', function($http,$log) {

    var urlBase = '/api/<#= name #>';
    var <#= name #>Factory = {};

		<# foreach(var verb in resource.Verbs) {#>

		<#= name #>Factory.<#=verb.Name.ToLower()#> = function (request) {
		<#if ( bodyVerbs.Contains(verb.Name.ToLower()) ) {#>
        var operation= $http.<#=verb.Name.ToLower()#>(urlBase,request );
		<#} else {#>
		var operation= $http({url: urlBase, method:'<#=verb.Name.ToLower()#>', params:request });		
		<#}#>

		     return operation.then(function(data, status, headers, config) {
				return data.data;
			}, 
			function(data, status, headers, config) {		
				$log.error(data);
				$log.error(status);
				$log.error(headers);
				$log.error(config);		    
				return  { isOk: false, message: data };
			}
		);
		
    };

		

<#}#>
	return <#= name #>Factory;
}]);
}())
<#
manager.EndBlock(); 	
}
    

manager.Process(true);
#>
<#+
string firstLetterLower(string value)
{
return char.ToLower(value[0]).ToString() + value.Substring(1);
}
#>
